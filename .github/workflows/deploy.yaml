name: deploy
on: registry_package
concurrency: development

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
    - name: Dump the payload
      run: |
        echo "${{toJSON(github.event)}}"

  publish:
    runs-on: ubuntu-latest
    outputs:
      image: '${{ steps.login.outputs.registry }}/such-${{ github.event.registry_package.name }}@${{ github.event.registry_package.package_version.version }}'
    steps:
    - name: Install registry package
      run: '${{ github.event.registry_package.package_version.installation_command }}'
    - name: Dummy Login
      id: login
      run: |
        echo "${{ github.token }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
        echo "::set-output name=registry::ghcr.io/${{ github.event.registry_package.namespace }}"
    - name: Publish image
      run: |
        docker tag \
          "${{ github.event.registry_package.package_version.package_url }}" \
          "${{ steps.login.outputs.registry }}/such-${{ github.event.registry_package.name }}"
        docker push -q "${{ steps.login.outputs.registry }}/such-${{ github.event.registry_package.name }}"

  update:
    runs-on: ubuntu-latest
    needs: publish
    env:
      GIT_COMMITTER_NAME: 'github-actions'
      GIT_COMMITTER_EMAIL: 'github-actions@github.com'
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Git Author
      run: |
        echo "GIT_AUTHOR_NAME=$(curl -s "${{ github.event.sender.url }}" | jq -r '.name')" >> $GITHUB_ENV
        echo "GIT_AUTHOR_EMAIL=${{ github.event.sender.login }}@users.noreply.github.com" >> $GITHUB_ENV
    - name: Install Kustomize
      run: |
        curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
        sudo mv kustomize /usr/local/bin/kustomize
    - name: Update image reference
      run: |
        cd dev
        kustomize edit set image \
          "${{ github.event.registry_package.namespace }}/${{ github.event.registry_package.name }}=${{ needs.publish.outputs.image }}"
        git commit --message "Update ${{ github.event.registry_package.name }} image reference" -- kustomization.yaml
        git push

  deploy:
    runs-on: ubuntu-latest
    needs: update
    environment:
      name: development
      url: http://example.invalid/applications/${{ github.event.registry_package.name }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Dump kustomize build
      run: |
        kustomize build ./dev
