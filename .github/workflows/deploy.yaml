name: deploy
on: registry_package

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: development
      url: http://example.invalid
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install Kustomize
      run: |
        curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
        sudo mv kustomize /usr/local/bin/kustomize
    - name: Dump the payload
      run: |
        echo "${{toJSON(github.event)}}"
    - name: Dummy Login
      id: login
      run: |
        echo "::set-output name=registry::fakeregistry.io/something"
    - name: Kustomize Edit
      env:
        IMAGE: '${{ github.event.registry_package.namespace }}/${{ github.event.registry_package.name }}'
        SOURCE_IMAGE: '${{ github.event.registry_package.package_version.package_url }}'
        TARGET_IMAGE: '${{ steps.login.outputs.registry }}/${{ github.event.registry_package.name }}:${{ github.event.registry_package.package_version.container_metadata.tag.name }}'
        GIT_COMMITTER_NAME: 'gramLabs Automation'
        GIT_COMMITTER_EMAIL: 'tools@stormforge.io'
        GIT_AUTHOR_NAME: 'StormForge Developer'
        GIT_AUTHOR_EMAIL: '${{ github.actor }}@users.noreply.github.com'
      run: |
        GIT_AUTHOR_NAME=$(curl -s "https://api.github.com/users/${{ github.actor }}" | jq -r '.name // "${GIT_AUTHOR_NAME}"')

        # Fake retagging the image
        docker pull "${SOURCE_IMAGE}"
        docker tag "${SOURCE_IMAGE}" "${TARGET_IMAGE}"

        # Update the image reference
        cd dev
        kustomize edit set image "${IMAGE}=${TARGET_IMAGE}"
        git commit --message "Update reference to ${SOURCE_IMAGE}" -- kustomization.yaml
        git push

    - name: Kustomize Dev
      run: |
        kustomize build ./dev
